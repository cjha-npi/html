digraph "npi::LinkHost::isSame_"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,style=rounded,filled,fillcolor=transparent];
  rankdir="RL";
  Node1 [id="Node000001",label="npi::LinkHost::isSame_",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Check whether two LinkHost instances refer to the same object and observers (universal and local)...."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="npi::LinkHost::assign_",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d75/classnpi_1_1_link_host.html#a59021c0af01b28c7a549c8ce16ef0368",tooltip="Internal helper to assign from another polymorphically related LinkHost object."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="npi::LinkHost::LinkHost",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d75/classnpi_1_1_link_host.html#a490ac825e921d673a3a32c94e7058d1d",tooltip="Polymorphic converting copy constructor."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="npi::LinkHost::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d75/classnpi_1_1_link_host.html#aa7c182e77bd354c70fb694ac3b1a6d76",tooltip="Polymorphic assignment operator."];
}
